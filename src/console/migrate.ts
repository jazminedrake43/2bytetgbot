#!/usr/bin/env bun
import { Database } from 'bun:sqlite';
import { Migration } from '../illumination/Migration';
import path from 'path';

type setupParams = {
  pathDatabase?: string;
  pathMigrations?: string;
};

async function main(params: setupParams = {}) {

const MIGRATIONS_PATH = params.pathMigrations || path.join(__dirname, 'migrations');

  const command = process.argv[2];
  const args = process.argv.slice(3);

  if (!command) {
    showHelp();
    return;
  }

  const db = new Database(params.pathDatabase || __dirname + '/database/database.sqlite');

  const migration = new Migration(db, MIGRATIONS_PATH);

  try {
    switch (command) {
      case 'create':
        if (args.length === 0) {
          console.error('‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è –∏–º—è –º–∏–≥—Ä–∞—Ü–∏–∏');
          console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: migrate create migration_name');
          return;
        }
        await Migration.create(args[0], MIGRATIONS_PATH);
        break;

      case 'up':
        await migration.up();
        console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
        break;

      case 'down':
        const steps = args[0] ? parseInt(args[0]) : 1;
        await migration.down(steps);
        console.log('‚úÖ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω');
        break;

      case 'status':
        migration.status();
        break;

      default:
        console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${command}`);
        showHelp();
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    db.close();
  }
}

function showHelp() {
  console.log(`
üóÉÔ∏è Migration CLI –¥–ª—è SQLite

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
  create <name>    –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
  up              –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
  down [steps]    –û—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)
  status          –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π

–ü—Ä–∏–º–µ—Ä—ã:
  migrate create create_users_table
  migrate up
  migrate down 2
  migrate status
`);
}
export const setupMigrations = async (params: setupParams) => {
  return main(params).catch(console.error);
}